# Generated by Django 5.1.2 on 2025-05-01 23:18

import django.db.models.deletion
import marketplace.models
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0007_alter_business_background_image_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('has_predefined_values', models.BooleanField(default=False, verbose_name='Имеет предустановленные значения')),
                ('is_filterable', models.BooleanField(default=False, help_text='Если отмечено, атрибут будет доступен для фильтрации в каталоге', verbose_name='Использовать в фильтрах')),
                ('display_order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Атрибут',
                'verbose_name_plural': 'Атрибуты',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, verbose_name='Значение')),
                ('display_order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок отображения')),
                ('color_code', models.CharField(blank=True, help_text='HEX-код цвета (например, #FF0000 для красного). Используется для атрибутов цвета.', max_length=7, null=True, verbose_name='Код цвета')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='marketplace.attribute', verbose_name='Атрибут')),
            ],
            options={
                'verbose_name': 'Значение атрибута',
                'verbose_name_plural': 'Значения атрибутов',
                'ordering': ['display_order', 'value'],
                'unique_together': {('attribute', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('page_identificator', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('big_image', models.ImageField(blank=True, default=None, null=True, upload_to='category_images/big_images/')),
                ('small_image', models.ImageField(blank=True, default=None, null=True, upload_to='category_images/small_images/')),
                ('ordering', models.PositiveSmallIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_filterable', models.BooleanField(default=False, help_text='Если отмечено, атрибут будет доступен для фильтрации в каталоге', verbose_name='Использовать в фильтрах')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='marketplace.category')),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='CategoryAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', models.BooleanField(default=False, help_text='Если отмечено, для товаров в этой категории этот атрибут обязателен.', verbose_name='Обязательный')),
                ('display_order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок отображения')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_attributes', to='marketplace.attribute', verbose_name='Атрибут')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_attributes', to='marketplace.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Атрибут категории',
                'verbose_name_plural': 'Атрибуты категорий',
                'ordering': ['display_order'],
                'unique_together': {('category', 'attribute')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('on_the_main', models.BooleanField(default=False, verbose_name='На главной странице')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('business', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='core.business', verbose_name='Бизнес')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='marketplace.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=marketplace.models.product_image_path, verbose_name='Изображение')),
                ('is_main', models.BooleanField(default=False, help_text='Главное изображение для продукта', verbose_name='Главное')),
                ('alt_text', models.CharField(blank=True, help_text='Текст, который показывается, если изображение не загрузилось', max_length=255, null=True, verbose_name='Альтернативный текст')),
                ('display_order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок отображения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='marketplace.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Изображение продукта',
                'verbose_name_plural': 'Изображения продуктов',
                'ordering': ['-is_main', 'display_order'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Артикул')),
                ('has_custom_name', models.BooleanField(default=False, help_text='Если отмечено, для этого варианта будет использоваться собственное название', verbose_name='Использовать своё название')),
                ('custom_name', models.CharField(blank=True, help_text='Название этого варианта (если отличается от основного товара)', max_length=255, null=True, verbose_name='Своё название')),
                ('has_custom_description', models.BooleanField(default=False, help_text='Если отмечено, для этого варианта будет использоваться собственное описание', verbose_name='Использовать своё описание')),
                ('custom_description', models.TextField(blank=True, help_text='Описание этого варианта (если отличается от основного товара)', null=True, verbose_name='Своё описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Скидка')),
                ('stock_quantity', models.PositiveIntegerField(default=0, verbose_name='Количество на складе')),
                ('show_this', models.BooleanField(default=False, help_text='Если отмечено, этот вариант будет показан в результатах поиска и списках товаров', verbose_name='Показывать в поиске')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='marketplace.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Вариант товара',
                'verbose_name_plural': 'Варианты товаров',
                'ordering': ['price', '-stock_quantity'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariantAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_value', models.CharField(blank=True, max_length=255, verbose_name='Произвольное значение')),
                ('category_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.categoryattribute', verbose_name='Атрибут категории')),
                ('predefined_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='marketplace.attributevalue', verbose_name='Предустановленное значение')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='marketplace.productvariant', verbose_name='Вариант товара')),
            ],
            options={
                'verbose_name': 'Атрибут варианта товара',
                'verbose_name_plural': 'Атрибуты вариантов товаров',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='marketplace_is_acti_90c2f9_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['on_the_main'], name='marketplace_on_the__1be3cb_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='marketplace_created_1f132e_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['price'], name='marketplace_price_51eb4e_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['stock_quantity'], name='marketplace_stock_q_880e67_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['show_this'], name='marketplace_show_th_51b633_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['has_custom_name'], name='marketplace_has_cus_527812_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['has_custom_description'], name='marketplace_has_cus_88c4d1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productvariantattribute',
            unique_together={('variant', 'category_attribute')},
        ),
    ]
